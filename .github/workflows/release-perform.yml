name: Release Perform
run-name: Release Perform v${{ github.event.inputs.releaseVersion }}

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        required: true

jobs:
  build-native-linux-x86:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseVersion }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu
      - uses: ./.github/workflows/rust-cache
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Run mvn package native
        run: mvn --batch-mode --projects ngrok-java-native --also-make package --activate-profiles ci-native --define 'ngrok.native.classifier=linux-x86_64' --define 'ngrok.native.target=x86_64-unknown-linux-gnu'
      - uses: actions/upload-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-linux-x86_64.jar
          path: ngrok-java-native/target/ngrok-java-native-${{ github.event.inputs.releaseVersion }}-linux-x86_64.jar
          retention-days: 1

  build-native-windows-x86:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseVersion }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc
      - uses: ./.github/workflows/rust-cache
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Run mvn package
        run: mvn --batch-mode --projects ngrok-java-native --also-make package --activate-profiles ci-native --define 'ngrok.native.classifier=windows-x86_64' --define 'ngrok.native.target=x86_64-pc-windows-msvc'
      - uses: actions/upload-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-windows-x86_64.jar
          path: ngrok-java-native/target/ngrok-java-native-${{ github.event.inputs.releaseVersion }}-windows-x86_64.jar
          retention-days: 1

  build-native-windows-x32:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseVersion }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: i686-pc-windows-msvc
      - uses: ./.github/workflows/rust-cache
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Run mvn package
        run: mvn --batch-mode --projects ngrok-java-native --also-make package --activate-profiles ci-native --define 'ngrok.native.classifier=windows-x86_32' --define 'ngrok.native.target=i686-pc-windows-msvc' --define 'skipTests'
      - uses: actions/upload-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-windows-x86_32.jar
          path: ngrok-java-native/target/ngrok-java-native-${{ github.event.inputs.releaseVersion }}-windows-x86_32.jar
          retention-days: 1

  build-native-macos-x86:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseVersion }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: x86_64-apple-darwin
      - uses: ./.github/workflows/rust-cache
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Run mvn package native
        run: mvn --batch-mode --projects ngrok-java-native --also-make package --activate-profiles ci-native --define 'ngrok.native.classifier=osx-x86_64' --define 'ngrok.native.target=x86_64-apple-darwin'
      - uses: actions/upload-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-osx-x86_64.jar
          path: ngrok-java-native/target/ngrok-java-native-${{ github.event.inputs.releaseVersion }}-osx-x86_64.jar
          retention-days: 1

  build-native-macos-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseVersion }}
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: aarch64-apple-darwin
      - uses: ./.github/workflows/rust-cache
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Run mvn package
        run: mvn --batch-mode --projects ngrok-java-native --also-make package --activate-profiles ci-native --define 'ngrok.native.classifier=osx-aarch_64' --define 'ngrok.native.target=aarch64-apple-darwin' --define 'skipTests'
      - uses: actions/upload-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-osx-aarch_64.jar
          path: ngrok-java-native/target/ngrok-java-native-${{ github.event.inputs.releaseVersion }}-osx-aarch_64.jar
          retention-days: 1

  deploy-central:
    runs-on: ubuntu-latest
    needs:
      - build-native-linux-x86
      - build-native-windows-x86
      - build-native-windows-x32
      - build-native-macos-x86
      - build-native-macos-arm64
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseVersion }}
      - uses: actions/setup-java@v3
        with:
          java-version: |
            17
            11
          distribution: 'temurin'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.OSSRH_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - uses: actions/download-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-linux-x86_64.jar
          path: ngrok-java-native/target/
      - uses: actions/download-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-windows-x86_64.jar
          path: ngrok-java-native/target/
      - uses: actions/download-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-windows-x86_32.jar
          path: ngrok-java-native/target/
      - uses: actions/download-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-osx-x86_64.jar
          path: ngrok-java-native/target/
      - uses: actions/download-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-osx-aarch_64.jar
          path: ngrok-java-native/target/
      - name: Run mvn deploy
        run: mvn --batch-mode deploy --activate-profiles ci-distro,central-distro
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_PASSPHRASE }}

  deploy-github:
    runs-on: ubuntu-latest
    needs:
      - build-native-linux-x86
      - build-native-windows-x86
      - build-native-windows-x32
      - build-native-macos-x86
      - build-native-macos-arm64
    steps:
      - uses: actions/checkout@v3
        with:
          ref: v${{ github.event.inputs.releaseVersion }}
      - uses: actions/setup-java@v3
        with:
          java-version: |
            17
            11
          distribution: 'temurin'
      - uses: actions/download-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-linux-x86_64.jar
          path: ngrok-java-native/target/
      - uses: actions/download-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-windows-x86_64.jar
          path: ngrok-java-native/target/
      - uses: actions/download-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-windows-x86_32.jar
          path: ngrok-java-native/target/
      - uses: actions/download-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-osx-x86_64.jar
          path: ngrok-java-native/target/
      - uses: actions/download-artifact@v3
        with:
          name: ngrok-java-native-${{ github.event.inputs.releaseVersion }}-osx-aarch_64.jar
          path: ngrok-java-native/target/
      - name: Run mvn deploy
        run: mvn --batch-mode deploy --activate-profiles ci-distro,github-distro
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
